{
  "swagger": "2.0",
  "info": {
    "title": "Relay API",
    "version": "2024-01-01",
    "description": "Use these API to manage Azure Relay resources through Azure Resource Manager.",
    "x-ms-code-generation-settings": {
      "name": "RelayManagementClient"
    }
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules": {
      "get": {
        "operationId": "Namespaces_ListAuthorizationRules",
        "tags": [
          "Namespaces"
        ],
        "description": "Authorization rules for a namespace.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rule returned successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleListAll": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAuthorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "Namespaces_GetAuthorizationRule",
        "tags": [
          "Namespaces"
        ],
        "description": "Authorization rule for a namespace by name.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace Authorization rule returned successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleGet": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAuthorizationRuleGet.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "tags": [
          "Namespaces"
        ],
        "description": "Creates or updates an authorization rule for a namespace.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The authorization rule parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to create namespace authorization rule succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleCreate": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAuthorizationRuleCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "tags": [
          "Namespaces"
        ],
        "description": "Deletes a namespace authorization rule.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to delete namespace authorization rule succeeded."
          },
          "204": {
            "description": "No content. The request has been accepted but the namespace authorization rule was not found."
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleDelete": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAuthorizationRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "Namespaces_ListKeys",
        "tags": [
          "Namespaces"
        ],
        "description": "Primary and secondary connection strings to the namespace.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleListKey": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "Namespaces_RegenerateKeys",
        "tags": [
          "Namespaces"
        ],
        "description": "Regenerates the primary or secondary connection strings to the namespace.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to regenerate authorization rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateAccessKeyParameters"
            }
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules": {
      "get": {
        "operationId": "HybridConnections_ListAuthorizationRules",
        "tags": [
          "HybridConnections"
        ],
        "description": "Authorization rules for a hybrid connection.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/HybridConnectionNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rules successfully returned.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleListAll": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAuthorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "HybridConnections_GetAuthorizationRule",
        "tags": [
          "HybridConnections"
        ],
        "description": "Hybrid connection authorization rule for a hybrid connection by name.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/HybridConnectionNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Hybrid connection authorization rule returned successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleGet": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAuthorizationRuleGet.json"
          }
        }
      },
      "put": {
        "operationId": "HybridConnections_CreateOrUpdateAuthorizationRule",
        "tags": [
          "HybridConnections"
        ],
        "description": "Creates or updates an authorization rule for a hybrid connection.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/HybridConnectionNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The authorization rule parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Hybrid connection authorization rule created.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleCreate": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAuthorizationRuleCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "HybridConnections_DeleteAuthorizationRule",
        "tags": [
          "HybridConnections"
        ],
        "description": "Deletes a hybrid connection authorization rule.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/HybridConnectionNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Hybrid connection authorization rule deleted."
          },
          "204": {
            "description": "Authorization rule does not exist."
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleDelete": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAuthorizationRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "HybridConnections_ListKeys",
        "tags": [
          "HybridConnections"
        ],
        "description": "Primary and secondary connection strings to the hybrid connection.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/HybridConnectionNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to retrieve connection strings to the hybrid connection succeeded.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleListKey": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "HybridConnections_RegenerateKeys",
        "tags": [
          "HybridConnections"
        ],
        "description": "Regenerates the primary or secondary connection strings to the hybrid connection.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/HybridConnectionNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to regenerate authorization rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateAccessKeyParameters"
            }
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to regenerate connection strings to hybrid connection succeeded.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules": {
      "get": {
        "operationId": "WCFRelays_ListAuthorizationRules",
        "tags": [
          "WCFRelays"
        ],
        "description": "Authorization rules for a WCF relay.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/RelayNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rules successfully returned.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRuleListResult"
            }
          }
        },
        "x-ms-examples": {
          "RelayAuthorizationRuleListAll": {
            "$ref": "./examples/Relay/RelayAuthorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "WCFRelays_GetAuthorizationRule",
        "tags": [
          "WCFRelays"
        ],
        "description": "Get authorizationRule for a WCF relay by name.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/RelayNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request for WCF relay authorization rule succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayAuthorizationRuleGet": {
            "$ref": "./examples/Relay/RelayAuthorizationRuleGet.json"
          }
        }
      },
      "put": {
        "operationId": "WCFRelays_CreateOrUpdateAuthorizationRule",
        "tags": [
          "WCFRelays"
        ],
        "description": "Creates or updates an authorization rule for a WCF relay.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/RelayNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The authorization rule parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "WCF relay authorization rule created.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayAuthorizationRuleCreate": {
            "$ref": "./examples/Relay/RelayAuthorizationRuleCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "WCFRelays_DeleteAuthorizationRule",
        "tags": [
          "WCFRelays"
        ],
        "description": "Deletes a WCF relay authorization rule.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/RelayNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to delete WCF relay authorization rule succeeded."
          },
          "204": {
            "description": "Request accepted but the authorization rule does not exist."
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayAuthorizationRuleDelete": {
            "$ref": "./examples/Relay/RelayAuthorizationRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "WCFRelays_ListKeys",
        "tags": [
          "WCFRelays"
        ],
        "description": "Primary and secondary connection strings to the WCF relay.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/RelayNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayAuthorizationRuleListKey.json": {
            "$ref": "./examples/Relay/RelayAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "WCFRelays_RegenerateKeys",
        "tags": [
          "WCFRelays"
        ],
        "description": "Regenerates the primary or secondary connection strings to the WCF relay.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/RelayNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to regenerate authorization rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateAccessKeyParameters"
            }
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RelayAuthorizationRuleRegenerateKey.json": {
            "$ref": "./examples/Relay/RelayAuthorizationRuleRegenerateKey.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessKeys": {
      "type": "object",
      "description": "Namespace/Relay Connection String",
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "description": "Primary connection string of the created namespace authorization rule."
        },
        "secondaryConnectionString": {
          "type": "string",
          "description": "Secondary connection string of the created namespace authorization rule."
        },
        "primaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
        },
        "secondaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
        },
        "keyName": {
          "type": "string",
          "description": "A string that describes the authorization rule."
        }
      }
    },
    "AuthorizationRule": {
      "description": "Single item in a List or Get AuthorizationRule operation",
      "properties": {
        "properties": {
          "description": "Properties supplied to create or update AuthorizationRule",
          "properties": {
            "rights": {
              "type": "array",
              "description": "The rights associated with the rule.",
              "items": {
                "type": "string",
                "enum": [
                  "Manage",
                  "Send",
                  "Listen"
                ],
                "x-ms-enum": {
                  "name": "AccessRights",
                  "modelAsString": true
                }
              }
            }
          },
          "required": [
            "rights"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "The system meta data relating to this resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../common/v1/definitions.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthorizationRuleListResult": {
      "type": "object",
      "description": "The response from the list namespace operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Result of the list authorization rules operation.",
          "items": {
            "$ref": "#/definitions/AuthorizationRule"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
        }
      }
    },
    "RegenerateAccessKeyParameters": {
      "type": "object",
      "description": "Parameters supplied to the regenerate authorization rule operation, specifies which key needs to be reset.",
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The access key to regenerate.",
          "enum": [
            "PrimaryKey",
            "SecondaryKey"
          ],
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": true
          }
        },
        "key": {
          "type": "string",
          "description": "Optional. If the key value is provided, this is set to key type, or autogenerated key value set for key type."
        }
      },
      "required": [
        "keyType"
      ]
    }
  },
  "parameters": {}
}